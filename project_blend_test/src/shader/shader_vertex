
#version 330 core

layout (location = 0) in vec3 aPos;			// 顶点数据中的顶点坐标
layout (location = 1) in vec2 aTexCoord;	// 顶点数据中的纹理坐标
layout (location = 2) in vec3 aColor;		// 顶点数据中的颜色坐标

uniform mat4 modelMatrix;					// 模型变换矩阵
uniform mat4 viewMatrix;					// 视图变换矩阵
uniform mat4 projectionMatrix;				// 投影变换矩阵
uniform int	 task;							// 1：绘制坐标系，2：绘制箱子，3：绘制地板

out vec2 TexCoord;							// 输出到顶点着色器
out vec3 outColor;						

//enum SHADER_TASK
//{
//    TASK_DRAW_COORD = 0,
//    TASK_DRAW_CUBE,
//    TASK_DRAW_FLOOR,
//    TASK_DRAW_WINDOW,
//    TASK_MAX
//};

void main()	
{
	if(task == 0)
	{
		outColor = aColor;
	}
	else
	{
		TexCoord = vec2(1.0 - aTexCoord.x, 1.0 - aTexCoord.y);
	}

	gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(aPos, 1.0);	
};