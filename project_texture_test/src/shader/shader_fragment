#version 330 core

in vec3 outColor;
in vec2 outTexCoord;

uniform sampler2D texture0;		// 纹理单元ID，值0对应GL_TEXTURE0纹理单元，以此类推，通过glUniform1i设置，，
uniform sampler2D texture1;
uniform int		  task;			// 着色器逻辑

out vec4 FragColor;

void main()
{
	if(task == 0)
	{
		FragColor = vec4(outColor, 1.0);
	}
	else if(task == 1 || task == 2 || task == 3 || task == 4 || task == 5 || task == 6)
	{
		FragColor = texture(texture0, outTexCoord);
	}
	else
	{
		FragColor = mix(texture(texture0, outTexCoord),						// 在同一个坐标顶点叠加两张纹理
						texture(texture1, vec2(1-outTexCoord.x,1-outTexCoord.y)), 
						0.4)	
					* vec4(outColor,1.0);									// 再叠加顶点数据中的颜色值

		//FragColor = texture(texture1, vec2(1-outTexCoord.x,outTexCoord.y));		//x方向翻转图片
	}
};