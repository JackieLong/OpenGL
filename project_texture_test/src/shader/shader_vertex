
#version 330 core

layout (location = 0) in vec3 pos;			// 顶点数据中的顶点坐标
layout (location = 1) in vec3 color;		// 顶点数据中的颜色值
layout (location = 2) in vec2 texCoord;		// 顶点数据中的纹理坐标

uniform mat4 modelMatrix;					// 模型矩阵
uniform mat4 viewMatrix;					// 观察矩阵
uniform mat4 projectionMatrix;				// 投影矩阵
uniform int  task;							// 着色器逻辑

out vec3 outColor;							// 输出到顶点着色器
out vec2 outTexCoord;						// 输出到顶点着色器

void main()	
{
	if(task == 0)
	{
		outColor = color;
		gl_Position =  projectionMatrix * viewMatrix * modelMatrix * vec4(pos, 1.0);
	}
	else if(task == 1 || task == 2 || task == 3 || task == 4 || task == 5 || task == 6)
	{
		outTexCoord = texCoord;
		gl_Position =  projectionMatrix * viewMatrix * modelMatrix * vec4(pos, 1.0);
	}
};