
#version 330 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoord;
layout (location = 2) in vec3 aColor;

out vec2 texCoord;
out vec3 outColor;

uniform mat4 modelMatrix;					// 模型变换矩阵
uniform mat4 viewMatrix;					// 视图变换矩阵
uniform mat4 projectionMatrix;				// 投影变换矩阵
uniform int  task;

void main()	
{
	if(task == 0) {
		gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(aPos, 1.0);
		outColor    = aColor;
	}
	else if(task == 1) {
		gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(aPos, 1.0);
		outColor    = vec3(0.0, 1.0, 0.0);
	}
	else if(task == 2) {
		gl_Position = vec4(aPos.x, aPos.y, 0, 1.0);
		texCoord = aTexCoord;
	}
};