#version 330 core
out vec4 FragColor;

in vec2 texCoord;
in vec3 fragPos;
in vec3 normal;

uniform sampler2D texture_diffuse0;
uniform vec3	  viewPos;

struct SunLight
{
	vec3 dir;

	vec3 ambient;
	vec3 diffuse;
	vec3 specular;
};

uniform SunLight   sunLight;

void main()
{   
	vec3 objectColor = vec3(texture(texture_diffuse0, texCoord));

	vec3 ambient1 = sunLight.ambient * objectColor;
	vec3 diffuse1 = sunLight.diffuse * objectColor * max(dot(normalize(-sunLight.dir),normal),0);
	vec3 specular1= sunLight.specular * objectColor * max(dot(normalize(reflect(sunLight.dir, normal)), normalize(viewPos - fragPos)), 0);

    FragColor = vec4(ambient1 + diffuse1 + specular1, 1.0);
}